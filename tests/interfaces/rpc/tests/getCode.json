{
  "title": "getCode",
  "schema": {
    "$ref": "../schemas/getCode.json"
  },
  "tests": [
    {
      "title": "getCode with params and success (HelloWorld.sol)",
      "request": {
        "method": "getCode",
        "params": [
          "0xfdde938c6f71b066eb34c1c92e5814186dbdcb5e",
          "latest"
        ]
      },
      "expectedResponse": {
        "result": "0x60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635524107714603d575b600080fd5b3415604757600080fd5b605b6004808035906020019091905050605d565b005b806000819055505b505600a165627a7a72305820c471b4376626da2540b2374e8b4110501051c426ff46814a6170ce9e219e49a80029"
      },
      "asserts": [
        {
          "description": "getCode result should be equal",
          "program": ".receivedResponse.result == .expectedResponse.result"
        }
      ]
    },
    {
      "title": "getCode with params and success (SimpleStorage.sol)",
      "request": {
        "method": "getCode",
        "params": [
          "0xeffb1dab2e6ed61aa213eacaefbd1a9a41e047ea",
          "latest"
        ]
      },
      "expectedResponse": {
        "result": "0x60606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806360fe47b1146100515780636d4ce63c14610074575b600080fd5b341561005c57600080fd5b610072600480803590602001909190505061009d565b005b341561007f57600080fd5b610087610149565b6040518082815260200191505060405180910390f35b7fc6d8c0af6d21f291e7c359603aa97e0ed500f04db6e983b9fce75a91c6b8da6b816040518082815260200191505060405180910390a1806000819055507ffd28ec3ec2555238d8ad6f9faf3e4cd10e574ce7e7ef28b73caa53f9512f65b93382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150565b600080549050905600a165627a7a72305820a7bfbe74ba7240a255e63a2d35d84d4e2af6b9c05766a00d93bd8ea023f4d6cc0029"
      },
      "asserts": [
        {
          "description": "getCode result should be equal",
          "program": ".receivedResponse.result == .expectedResponse.result"
        }
      ]
    },
    {
      "title": "getCode with wrong address and get empty result",
      "request": {
        "method": "getCode",
        "params": [
          "0xeffb1dab2e6ed61aa213eacaefbd1a9a41e00000",
          "latest"
        ]
      },
      "expectedResponse": {
        "result": "0x"
      },
      "asserts": [
        {
          "description": "getCode with nonexistent address should return empty result(0x)",
          "program": ".receivedResponse.result == .expectedResponse.result"
        }
      ]
    },
    {
      "title": "getCode with no parameters",
      "request": {
        "method": "getCode",
        "params": [],
        "shouldFailSchema": true
      },
      "expectedResponse": {
        "error": {
          "message": "missing value for required argument 0",
          "code": -32602
        }
      },
      "asserts": [
        {
          "description": "response should be an error",
          "program": ".receivedResponse.error != null"
        },
        {
          "description": "error code should be -32602",
          "program": ".receivedResponse.error.code == .expectedResponse.error.code"
        }
      ]
    }
  ]
}

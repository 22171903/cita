{
  "title": "getTransactionReceipt",
  "schema": {
    "$ref": "../schemas/getTransactionReceipt.json"
  },
  "tests": [
    {
      "title": "getTransactionReceipt with transaction hash and success (HelloWorld.sol)",
      "request": {
        "method": "getTransactionReceipt",
        "params": [
          "0x25a1d215c49f14a14d33b9836a5e29dd5269c2e9337ab6eaa78766ea9a4f2e17"
        ]
      },
      "expectedResponse": {
        "result": {
          "transactionHash": "0x25a1d215c49f14a14d33b9836a5e29dd5269c2e9337ab6eaa78766ea9a4f2e17",
          "transactionIndex": "0x0",
          "blockHash": "0x32afe0ee7c085f9b6e15273d0a5d78e84ca8b55b0612fea6730ced730d1d4994",
          "blockNumber": "0x2",
          "cumulativeGasUsed": "0x7453",
          "gasUsed": "0x7453",
          "contractAddress": "0xfdde938c6f71b066eb34c1c92e5814186dbdcb5e",
          "logs": [],
          "root": null,
          "logsBloom": "0x
          "errorMessage": null
        }
      },
      "asserts": [
        {
          "description": "getTransactionReceipt result.transactionHash should be equal",
          "program": ".receivedResponse.result.transactionHash == .expectedResponse.result.transactionHash"
        },
        {
          "description": "getTransactionReceipt result.contractAddress should be equal",
          "program": ".receivedResponse.result.contractAddress == .expectedResponse.result.contractAddress"
        },
        {
          "description": "getTransactionReceipt result.logsBloom should be equal",
          "program": ".receivedResponse.result.logsBloom == .expectedResponse.result.logsBloom"
        },
        {
          "description": "getTransactionReceipt result.errorMessage should be equal (both `null`)",
          "program": ".receivedResponse.result.errorMessage == .expectedResponse.result.errorMessage"
        }
      ]
    },
    {
      "title": "getTransactionReceipt with transaction hash and success (SimpleStorage.sol)",
      "request": {
        "method": "getTransactionReceipt",
        "params": [
          "0x044b46c7aaa3f3293177aff9d598e749cc343310b1af90761a39b0c364a9042a"
        ]
      },
      "expectedResponse": {
        "result": {
          "transactionHash": "0x044b46c7aaa3f3293177aff9d598e749cc343310b1af90761a39b0c364a9042a",
          "transactionIndex": "0x0",
          "blockHash": "0xe7a297d36b360d5d68ca77928706f3ea7033f3f32d29421c91c4ff8051c8f337",
          "blockNumber": "0xc",
          "cumulativeGasUsed": "0x17ebc",
          "gasUsed": "0x17ebc",
          "contractAddress": "0xeffb1dab2e6ed61aa213eacaefbd1a9a41e047ea",
          "logs": [
            {
              "address": "0xeffb1dab2e6ed61aa213eacaefbd1a9a41e047ea",
              "topics": [
                "0x8fb1356be6b2a4e49ee94447eb9dcb8783f51c41dcddfe7919f945017d163bf3"
              ],
              "data": "0x00000000000000000000000031d40cd88d6a884d2c95cf261c9f8ca495240af20000000000000000000000000000000000000000000000000000000000000064",
              "blockHash": "0xe7a297d36b360d5d68ca77928706f3ea7033f3f32d29421c91c4ff8051c8f337",
              "blockNumber": "0xc",
              "transactionHash": "0x044b46c7aaa3f3293177aff9d598e749cc343310b1af90761a39b0c364a9042a",
              "transactionIndex": "0x0",
              "logIndex": "0x0",
              "transactionLogIndex": "0x0"
            }
          ],
          "root": null,
          "logsBloom": "0x
          "errorMessage": null
        }
      },
      "asserts": [
        {
          "description": "getTransactionReceipt result.transactionHash should be equal",
          "program": ".receivedResponse.result.transactionHash == .expectedResponse.result.transactionHash"
        },
        {
          "description": "getTransactionReceipt result.contractAddress should be equal",
          "program": ".receivedResponse.result.contractAddress == .expectedResponse.result.contractAddress"
        },
        {
          "description": "getTransactionReceipt result.logsBloom should be equal",
          "program": ".receivedResponse.result.logsBloom == .expectedResponse.result.logsBloom"
        },
        {
          "description": "getTransactionReceipt result.errorMessage should be equal (both `null`)",
          "program": ".receivedResponse.result.errorMessage == .expectedResponse.result.errorMessage"
        },
        {
          "description": "getTransactionReceipt result.logs[0].topics[0] should be equal",
          "program": ".receivedResponse.result.logs[0].topics[0] == .expectedResponse.result.logs[0].topics[0]"
        },
        {
          "description": "getTransactionReceipt result.logs[0].data should be equal",
          "program": ".receivedResponse.result.logs[0].data == .expectedResponse.result.logs[0].data"
        }
      ]
    },
    {
      "title": "getTransactionReceipt with transaction hash and return errorMessage(Not enough base gas.)",
      "request": {
        "method": "getTransactionReceipt",
        "params": [
          "0x3d1980cd96546485de23be4aeaeadb7ccf8381e64d2bc660450a2a5ec64cb816"
        ]
      },
      "expectedResponse": {
        "result": {
          "transactionHash": "0x3d1980cd96546485de23be4aeaeadb7ccf8381e64d2bc660450a2a5ec64cb816",
          "transactionIndex": "0x0",
          "blockHash": "0xe7a297d36b360d5d68ca77928706f3ea7033f3f32d29421c91c4ff8051c8f337",
          "blockNumber": "0x7",
          "cumulativeGasUsed": "0x0",
          "gasUsed": "0x0",
          "contractAddress": null,
          "logs": [],
          "root": null,
          "logsBloom": "0x
          "errorMessage": "Not enough base gas."
        }
      },
      "asserts": [
        {
          "description": "getTransactionReceipt result.transactionHash should be equal",
          "program": ".receivedResponse.result.transactionHash == .expectedResponse.result.transactionHash"
        },
        {
          "description": "getTransactionReceipt result.contractAddress should be equal",
          "program": ".receivedResponse.result.contractAddress == .expectedResponse.result.contractAddress"
        },
        {
          "description": "getTransactionReceipt result.logsBloom should be equal",
          "program": ".receivedResponse.result.logsBloom == .expectedResponse.result.logsBloom"
        },
        {
          "description": "getTransactionReceipt result.errorMessage should be equal",
          "program": ".receivedResponse.result.errorMessage == .expectedResponse.result.errorMessage"
        },
        {
          "description": "getTransactionReceipt result.logs should be equal",
          "program": ".receivedResponse.result.logs == .expectedResponse.result.logs"
        },
        {
          "description": "getTransactionReceipt result.gasUsed should be equal",
          "program": ".receivedResponse.result.gasUsed == .expectedResponse.result.gasUsed"
        }
      ]
    },
    {
      "title": "getTransactionReceipt with transaction hash and return errorMessage(Out of gas.)",
      "request": {
        "method": "getTransactionReceipt",
        "params": [
          "0x85de5454b57c8bfc7b46522a08f5344a75c29389f39b6ee37fbcd45d8faa7788"
        ]
      },
      "expectedResponse": {
        "result": {
          "transactionHash": "0x85de5454b57c8bfc7b46522a08f5344a75c29389f39b6ee37fbcd45d8faa7788",
          "transactionIndex": "0x0",
          "blockHash": "0x32af6337e69d8bbf2ec9a95ae0933738b39a3c61ce53be035c566c87d37ba0ce",
          "blockNumber": "0x8",
          "cumulativeGasUsed": "0x40000001",
          "gasUsed": "0x40000001",
          "contractAddress": null,
          "logs": [],
          "root": null,
          "logsBloom": "0x
          "errorMessage": "Out of gas."
        }
      },
      "asserts": [
        {
          "description": "getTransactionReceipt result.transactionHash should be equal",
          "program": ".receivedResponse.result.transactionHash == .expectedResponse.result.transactionHash"
        },
        {
          "description": "getTransactionReceipt result.contractAddress should be equal",
          "program": ".receivedResponse.result.contractAddress == .expectedResponse.result.contractAddress"
        },
        {
          "description": "getTransactionReceipt result.logsBloom should be equal",
          "program": ".receivedResponse.result.logsBloom == .expectedResponse.result.logsBloom"
        },
        {
          "description": "getTransactionReceipt result.errorMessage should be equal",
          "program": ".receivedResponse.result.errorMessage == .expectedResponse.result.errorMessage"
        },
        {
          "description": "getTransactionReceipt result.logs should be equal",
          "program": ".receivedResponse.result.logs == .expectedResponse.result.logs"
        },
        {
          "description": "getTransactionReceipt result.gasUsed should be equal",
          "program": ".receivedResponse.result.gasUsed == .expectedResponse.result.gasUsed"
        }
      ]
    },
    {
      "title": "getTransactionReceipt with transaction hash and return EVM Error.",
      "request": {
        "method": "getTransactionReceipt",
        "params": [
          "0x6b8f5a4ce53c529de93329b9cacf17cc62b866fb07fdaf5a829e0698602568c5"
        ]
      },
      "expectedResponse": {
        "result": {
          "transactionHash": "0x6b8f5a4ce53c529de93329b9cacf17cc62b866fb07fdaf5a829e0698602568c5",
          "transactionIndex": "0x0",
          "blockHash": "0xe79c4c899afe6afd5917687f42a43a65e6a8f4826b13888f8837e381b417c93e",
          "blockNumber": "0xa",
          "cumulativeGasUsed": "0x2710",
          "gasUsed": "0x2710",
          "contractAddress": null,
          "logs": [],
          "root": null,
          "logsBloom": "0x
          "errorMessage": "Not enough stack elements to execute instruction."
        }
      },
      "asserts": [
        {
          "description": "getTransactionReceipt result.transactionHash should be equal",
          "program": ".receivedResponse.result.transactionHash == .expectedResponse.result.transactionHash"
        },
        {
          "description": "getTransactionReceipt result.contractAddress should be equal",
          "program": ".receivedResponse.result.contractAddress == .expectedResponse.result.contractAddress"
        },
        {
          "description": "getTransactionReceipt result.logsBloom should be equal",
          "program": ".receivedResponse.result.logsBloom == .expectedResponse.result.logsBloom"
        },
        {
          "description": "getTransactionReceipt result.errorMessage should be equal",
          "program": ".receivedResponse.result.errorMessage == .expectedResponse.result.errorMessage"
        },
        {
          "description": "getTransactionReceipt result.logs should be equal",
          "program": ".receivedResponse.result.logs == .expectedResponse.result.logs"
        }
      ]
    },
    {
      "title": "getTransactionReceipt with wrong transaction hash and get empty result",
      "request": {
        "method": "getTransactionReceipt",
        "params": [
          "0x25a1d215c49f14a14d33b9836a5e29dd5269c2e9337ab6eaa78766ea9a000000"
        ]
      },
      "expectedResponse": {
        "result": null
      },
      "asserts": [
        {
          "description": "getTransactionReceipt result should be equal",
          "program": ".receivedResponse.result == .expectedResponse.result"
        }
      ]
    },
    {
      "title": "getTransactionReceipt with no parameters",
      "request": {
        "method": "getTransactionReceipt",
        "params": [],
        "shouldFailSchema": true
      },
      "expectedResponse": {
        "error": {
          "message": "missing value for required argument 0",
          "code": -32602
        }
      },
      "asserts": [
        {
          "description": "response should be an error",
          "program": ".receivedResponse.error != null"
        },
        {
          "description": "error code should be -32602",
          "program": ".receivedResponse.error.code == .expectedResponse.error.code"
        }
      ]
    }
  ]
}
